
#*********************************************************************
#========================
#Install-Patch-ipv6Vuln.ps1
#========================
# If not already installed, installs the appropriate patch for the ipv6 vulnerability.
#========================
#Modified: 08.19.2024
#========================
# Define the list of KB numbers with their corresponding OS versions and build numbers
$KBList = @{
    "KB5041571" = "10.0.26100";
    "KB5041828" = "6.3.9600";
    "KB5041851" = "6.2.9200";
    "KB5041838" = "6.1.7601";
    "KB5041823" = "6.1.7601";
    "KB5041850" = "6.0.6003";
    "KB5041847" = "6.0.6003";
    "KB5041773" = "10.0.14393";
    "KB5041782" = "10.0.10240";
    "KB5041573" = "10.0.25398";
    "KB5041585" = "10.0.22631";
    "KB5041580" = "10.0.19045";
    "KB5041592" = "10.0.22000";
    "KB5041160" = "10.0.20348";
    "KB5041578" = "10.0.17763";
}

# Get the OS build number and installed hotfixes
$osInfo = Get-ComputerInfo
$buildNumber = $osInfo.OSVersion
$installedHotFixes = (get-hotfix).HotFixID

# Remove the last number from the OS build number
#$shortBuildNumber = $buildNumber.Substring(0, $buildNumber.LastIndexOf('.'))

# Find the appropriate KB for the current OS build number
$kbToInstall = $KBList.GetEnumerator() | Where-Object { $_.Value -eq $buildNumber } | Select-Object -ExpandProperty Key

if ($kbToInstall) {
    if ($installedHotFixes.HotFixID -contains $kbToInstall) {
        Write-Output "The KB $kbToInstall is already installed."
    } else {
        Write-Output "The appropriate KB for this OS build number ($buildNumber) is $kbToInstall."
		<#
        # Construct the download URL (example URL, adjust as needed)
        $url = "https://www.catalog.update.microsoft.com/Search.aspx?q=$kbToInstall"

        # Download the patch
        $patchPath = "C:\temp\$kbToInstall.msu"
        Invoke-WebRequest -Uri $url -OutFile $patchPath
		#>
		# get system architecure
		$architecture = $OSInfo.CsSystemType -replace " PC", ""
		# create search string
		$search = $OSInfo.OSDisplayVersion,$architecture,$kbToInstall -join " "
		# search for the update
		$update = get-MSCatalogUpdate -search $search
		# Download the update
		Save-MSCatalogUpdate -Guid $update.Guid -Destination "C:\temp\" -Language "en-us"
				

        # Install the patch
        Start-Process -FilePath "wusa.exe" -ArgumentList "$patchPath /quiet /norestart" -Wait

        # Clean up the downloaded file
        Remove-Item -Path $patchPath

        Write-Output "Installation of $kbToInstall is complete. A restart may be required."
    }
} else {
    Write-Output "No appropriate KB found for this OS build number ($buildNumber)."
}
